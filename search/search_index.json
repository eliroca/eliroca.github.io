{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"eliroca.github.io","text":""},{"location":"00-obs-first-steps/","title":"First steps with osc","text":""},{"location":"00-obs-first-steps/#1-install-osc","title":"1. Install osc","text":"<p>openSUSE Commander (osc) is a command-line interface to the Open Build Service (OBS). On an openSUSE / SUSE distribution, just install it via zypper, openSUSE's package manager.</p> <pre><code>zypper in osc\n</code></pre>"},{"location":"00-obs-first-steps/#2-connect-to-obs","title":"2. Connect to OBS","text":"<p>By default, osc will ask if you have a community account on the openSUSE OBS instance. Go ahead and sign up if you haven't already ;-) it's at https://build.opensuse.org.</p> <p>Let's run osc for the first time!</p> <pre><code>osc user\n\nYour user account / password are not configured yet.\nYou will be asked for them below, and they will be stored in\n/root/.config/osc/oscrc for future use.\n\nCreating osc configuration file /root/.config/osc/oscrc ...\nUsername [api.opensuse.org]: \nPassword [eroca@api.opensuse.org]: \n\nNUM NAME              DESCRIPTION\n1   Kernel keyring    Store password in user session keyring in kernel keyring [secure, in-memory, per-session]\n2   Secret Service    Store password in Secret Service (GNOME Keyring backend) [secure, persistent]\n3   Transient         Do not store the password and always ask for it [secure, in-memory]\n4   Obfuscated config Store the password in obfuscated form in the osc config file [insecure, persistent]\n5   Config            Store the password in plain text in the osc config file [insecure, persistent]\nSelect credentials manager [default=1]: 2\n\neroca: \"Elisei Roca\" &lt;eroca@suse.com&gt;\n</code></pre>"},{"location":"00-obs-first-steps/#3-connect-to-other-obs-instances","title":"3. Connect to other OBS instances","text":"<p>At SUSE, we have multiple OBS instances, here's how the command looks like:</p> <pre><code>osc --apiurl https://api.suse.de user\n\neroca: \"Elisei Roca\" &lt;eroca@suse.com&gt;\n</code></pre> <p></p>"},{"location":"00-obs-first-steps/#links","title":"Links","text":"<ul> <li> <p>osc source code</p> </li> <li> <p>osc documentation</p> </li> <li> <p>openSUSE OBS instance</p> </li> </ul>"},{"location":"01-obs-build-containers/","title":"Build and publish containers with OBS","text":"<p>Why use the Open Build Service?</p> <ul> <li>it will host the latest successful build</li> <li>it automatically rebuilds containers if included packages or dependencies get updates</li> </ul> <p>General prerequisites:</p> <ul> <li>get an account on the openSUSE Build Service</li> <li>install the command-line interface for OBS: <code>osc</code></li> </ul> <p></p>"},{"location":"01-obs-build-containers/#browser-web-interface","title":"Browser web interface","text":"<p>Direct link to video, in case it does not show up below</p> <p></p>"},{"location":"01-obs-build-containers/#command-line-interface","title":"Command-line interface","text":""},{"location":"01-obs-build-containers/#1-create-new-project","title":"1. Create new project","text":""},{"location":"01-obs-build-containers/#11-meta-configuration","title":"1.1. Meta configuration","text":"<p>Run</p> <pre><code>&gt; osc meta prj home:eroca:test --edit\n</code></pre> <p>and add a <code>containers</code> repository for your new project:</p> <pre><code>&lt;project name=\"home:eroca:test\"&gt;\n&lt;title/&gt;\n&lt;description/&gt;\n&lt;person userid=\"eroca\" role=\"bugowner\"/&gt;\n&lt;person userid=\"eroca\" role=\"maintainer\"/&gt;\n&lt;repository name=\"containers\"&gt;\n&lt;path project=\"openSUSE:Containers:Tumbleweed\" repository=\"containers\"/&gt;\n&lt;arch&gt;x86_64&lt;/arch&gt;\n&lt;/repository&gt;\n&lt;/project&gt;\n</code></pre> <p>This way you have created a new project and configured a repository.</p>"},{"location":"01-obs-build-containers/#12-project-configuration","title":"1.2. Project configuration","text":"<p>Run</p> <pre><code>&gt; osc meta prjconf home:eroca:test --edit\n</code></pre> <p>and add the following configuration:</p> <pre><code>%if \"%_repository\" == \"containers\"\nType: docker\nPrefer: openSUSE-release-appliance-docker\n%endif\n</code></pre> <p>After this step you have enabled container builds in the repository.</p> <p></p>"},{"location":"01-obs-build-containers/#2-create-new-package","title":"2. Create new package","text":""},{"location":"01-obs-build-containers/#21-checkout-project","title":"2.1. Checkout project","text":"<pre><code>&gt; osc checkout home:eroca:test\n&gt; cd home:eroca:test\n</code></pre>"},{"location":"01-obs-build-containers/#22-create-new-package","title":"2.2. Create new package","text":"<pre><code>&gt; osc mkpac container-hello\n&gt; cd container-hello\n</code></pre>"},{"location":"01-obs-build-containers/#3-add-dockerfile","title":"3. Add Dockerfile","text":"<p>Open your favorite editor, use the following as template:</p> <pre><code>#!BuildTag: hello\nFROM opensuse/tumbleweed\n# add repositories as needed\n# RUN zypper addrepo https://download.opensuse.org/repositories/home:eroca:test/openSUSE_Tumbleweed/ \"home:eroca:test\"\n# RUN zypper modifyrepo -p 97 \"home:eroca:test\"\n# RUN zypper --gpg-auto-import-keys refresh\n# install packages\nRUN zypper --non-interactive install hello\n\nCMD hello\n</code></pre> <p>then run:</p> <pre><code>&gt; osc add Dockerfile\n</code></pre> <p>Noticed the <code>#!BuildTag</code> line at the beginning? That's specific to OBS; it's your container name.</p> <p></p>"},{"location":"01-obs-build-containers/#4-build-locally","title":"4. Build locally","text":"<p>Building locally lets you fix any errors before commiting, which also saves server resources.</p> <pre><code>&gt; osc build\n</code></pre> <p>You can of course just use docker or podman for that as well.</p> <p></p>"},{"location":"01-obs-build-containers/#5-commit-changes","title":"5. Commit changes","text":"<p>Commiting changes triggers building and publishing on the server.</p> <pre><code>&gt; osc commit -m \"Initial commit of container-hello\"\n</code></pre> <p>Check results, will take a few minutes to finish:</p> <pre><code>&gt; osc results --watch\ncontainers           x86_64     building\ncontainers           x86_64     finished*\ncontainers           x86_64     succeeded*\n^C\n</code></pre> <p></p>"},{"location":"01-obs-build-containers/#6-start-using-your-container","title":"6. Start using your container!","text":"<pre><code>&gt; docker pull registry.opensuse.org/home/eroca/test/containers/hello:latest\n</code></pre> <pre><code>&gt; docker run --rm registry.opensuse.org/home/eroca/test/containers/hello:latest\nHello, world!\n</code></pre>"},{"location":"01-obs-build-containers/#links","title":"Links","text":"<ul> <li> <p>osc documentation</p> </li> <li> <p>OBS containers documentation</p> </li> <li> <p>openSUSE OBS instance</p> </li> <li> <p>openSUSE containers registry</p> </li> </ul>"}]}